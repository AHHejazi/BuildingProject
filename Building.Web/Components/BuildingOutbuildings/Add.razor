@page "/BuildingOuts/Add"
@inherits PageBase
<h3>@AppResources.BuildingOutbuildings</h3>
<EditForm Model="Model" Context="formContext" OnValidSubmit="SubmitBuildingOutsAsync">
    <FluentValidationValidator DisableAssemblyScanning="@true" />
    <div class="form-row">

        <div class="form-group col-md-4">
            <label for="itemTypetimate">@AppResources.BuildingsList</label>

            <InputSelect @bind-Value="Model.BuildingId" id="BuildingId" class="form-control">

                <option selected>Select...</option>
                @if (buildingList != null)
                {
                    foreach (var item in buildingList)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                }

            </InputSelect>
            <ValidationMessage For="@(() => Model.BuildingId)" />
        </div>


        <div class="form-group col-md-4">
            <label for="itemTypetimate">@AppResources.ComponentsList</label>

            <InputSelect ValueExpression="@(()=>Model.ComponentId)"  ValueChanged="@((Guid componentvalue) => CheckIsOutBuilding(componentvalue))" Value="@(Model.ComponentId)" id="ComponentId" class="form-control">

                <option selected>Select...</option>
                @if (ComponentList != null)
                {
                    foreach (var item in ComponentList)
                    {
                        <option value="@item.Value">@item.Text</option>
                    }
                }

            </InputSelect>
            <ValidationMessage For="@(() => Model.ComponentId)" />
        </div>
        @if (isOutBuildingComponent)
        {
    <div class="form-group col-md-4">
        <label for="itemTypetimate">@AppResources.OutbuildingsList</label>
        <InputSelect @bind-Value="Model.OutbuildingsTypeId" id="OutbuildingId" class="form-control">

            <option selected>Select...</option>
            @if (OutbuildingList != null)
                {
                    foreach (var item in OutbuildingList)
                    {
                    <option value="@item.Value">@item.Text</option>
                    }
                }

        </InputSelect>
        <ValidationMessage For="@(() => Model.OutbuildingsTypeId)" />
    </div>
        }
        
    </div>
    <NavLink class="anchor-link link-button mt-3" href="/BuildingOuts/index">Back</NavLink>
    <button @onclick="@(async e => await ValidateForm(formContext))" type="submit" class="submit-button mt-3">Submit</button>

</EditForm>

<MessageAlert MessageText="@Message" StatusClass="@StatusClass"></MessageAlert>